
000000			rs    rt    rd    shamt funct	(type R)
opcode			rs	  rt	immediate			(type I)
opcode			address							(type J)
------------- .text Ω√¿€¡° -----------------
000000			00000000000000000001011000		Sizeof(.text) 88 (4*22)
000000			00000000000000000000001100		Sizeof(.data) 12 (4*3)

000000 and		10001 00000 10001 00000 100100	$17 <- $0 & $17
000000 and		10010 00000 10010 00000 100100	$18 <- $0 & $18
001111 lui		00000 01000 0001000000000000	$8 <- 0001 0000 0000 0000 (address of data1, start)
001111 lui		00000 01001 0001000000000000	$9 <- 0001 0000 0000 0000 (same)
001101 ori		01001 01001 0000000000000100	$9 <- $9 or 0000 0000 0000 0100(+4, data2)
000000 and		01010 00000 01010 00000 100100  $10 <- $10 & $0

 // lab1
000000 and		01011 00000 01011 00000 100100	$11 <- $0 & $11

 // lab2
001001 addiu	10001 10001 0000000000000001	$17 <- $17 + 0x17
001001 addiu	01011 01011 0000000000000001	$11 <- $11 + 0x1
000000 or		01001 00000 01001 00000 100101	$9 <- $0 | $9
000101 bne		01011 01000 1111111111111100	if($11 =! $8) jump lab2(-4)

 // lab3
001001 addiu	10010 10010 0000000000000010	$18 <- $18 + 0x2
001001 addiu	01011 01011 0000000000000001	$11 <- $11 + 1
000000 sll		00000 10001 10010 00001 000000	$17 <- $18<<1
000000 srl		00000 10010 10001 00001 000010	$18 <- $17>>1
000000 and		10001 10010 10011 00000 100100	$19 <- $17 & $18
000101 bne		01011 01001 1111111111111010	if($11 != $9) jump lab3(-5)

 // lab4
000000 addu		00101 11111 00101 00000 100001	$5 <- $5 + $31 (Unsigned)
000000 nor		10001 10010 10000 00000 100111	$16 <- ~($17 or $18)
000100 beq		01010 01000 0000000000000001	if($10 == $8) jump lab1(1?)
000010 j		00000100000000000000000110		PC = address(26bit)

 // lab5
001101 ori		10000 10000 1111000011110000	$16 <- $16 or 0xf0f0 (16bits)

Initial value for data section
00000000000000000000000001100100 = 100 (data1)
00000000000000000000000011001000 = 200 (data2)
0001 0010 0011 0100 0101 0110 0111 1000	 = 0x12345678